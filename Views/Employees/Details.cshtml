@using PPE.Data.Enums
@using NuGet.Protocol
@using System.Security.Claims
@model PPE.Models.Employee

@{
    ViewData["Title"] = "Employee: " + Model.FullName;
    ViewBag.Buttons = new List<ButtonModel>
    {
        new ButtonModel
        {
            Text = "Back to list",
            Action = "Index",
            Controller = "Employees",
            ButtonType = "dark"
        }
    };
}

<div class="card">
    <div class="card-body">
        <div class="row justify-content-between align-items-center">
            <div class="col-12 col-sm-6 col-md-4">
                <h5>@Html.DisplayNameFor(model => model.FullName) | @Html.DisplayNameFor(model => model.Phone) </h5>
                <strong>@Html.DisplayFor(model => model.FullName) | @Html.DisplayFor(model => model.Phone)</strong> 
            </div>
            <div class="col-12 col-sm-6 col-md-4">
                <h5>@Html.DisplayNameFor(model => model.Project) | @Html.DisplayNameFor(model => model.Function)</h5> 
                <strong>@Html.DisplayFor(model => model.Project!.Title) | @Html.DisplayNameFor(model => model.Function)</strong> 
            </div>
            <div class="col-12 col-sm-6 col-md-4">
                <h5>@Html.DisplayNameFor(model => model.Size) | @Html.DisplayNameFor(model => model.ShoeSize)</h5> 
                <strong>@Html.DisplayFor(model => model.Size) | @Html.DisplayFor(model => model.ShoeSize)</strong>
            </div>
        </div>
    </div>
</div>
@*<h1>
    @User.IsInRole("Ppe.Create")
    @{
        var roles = User.Claims.Where(c => c.Type == ClaimTypes.Role).Select(c => c.Value).ToList();
    }
</h1>*@

@*<div>
    @foreach (var item in roles)
    {
        <span>
            @item
        </span>
    }
</div>*@
@*<div>
    @Model.CreatedAt
    @Model.UpdatedAt
    @Model.CreatedBy
</div>*@
<div class="card-body bg-white">
    <ul class="nav nav-tabs nav-linetriangle no-hover-bg">
        <li class="nav-item">
            <a class="nav-link active" id="base-tab41" data-toggle="tab" aria-controls="tab41" href="#currentTab" aria-expanded="true">
                Current PPEs
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="base-tab42" data-toggle="tab" aria-controls="tab42" href="#tab42" aria-expanded="false">
                <span class="d-flex justify-content-center align-items-center">
                    <span> To be payed</span> &nbsp; &nbsp;
                    @*@if (Model.PayableStocks.Any()){
                        <div class="badge badge-warning">@Model.PayableStocks.Count(e => e.Quantity > 0 && e.IsPaid == false)</div>
                    }*@
                </span>
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="base-tab43" data-toggle="tab" aria-controls="tab43" href="#tab43" aria-expanded="false">
                History PPEs
            </a>
        </li>
    </ul>
    
    <div class="tab-content px-1 pt-1">
        <div role="tabpanel" class="tab-pane active" id="currentTab" aria-expanded="true" aria-labelledby="base-tab41">
            <div class="d-flex justify-content-between align-items-center">
                <h3 class="card-title">Current PPEs</h3>
                <a asp-action="Create" asp-controller="Dotations" asp-route-id="@Model.Id" class="btn btn-primary btn-sm">Add new PPE</a>
            </div>
            <div class="bg-white">
                <table class="table">
                    <thead>
                    <tr class="bg-primary text-white">
                        <th>PPE</th>
                        <th>Variant</th>
                        <th>Quantity</th>
                        <th>Action</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var item in Model.StockEmployees.Where(e=> e.Quantity > 0))
                    {
                        <tr>
                            <td>@item.Article.Ppe.Title</td>
                            <td>@item.Article.AttributeValueAttributeCategory.AttributeValue.Value.Text</td>
                            <td>@item.Quantity</td>
                            <td>
                                @* <form asp-action="Create" method="get" asp-controller="Returns"> *@
                                @*<input type="hidden" name="articleId" value="@item.ArticleId" />
                                    <input type="hidden" name="employeeId" value="@Model.Id"/>*@
                                @*<form asp-action="Create" method="get" asp-controller="Returns" id="returnPpeForm"> 
                                    <div class="btn-group">
                                        <button type="button" onclick="returnPpe({type: 1,articleId: @item.ArticleId,employeeId: @Model.Id})" 
                                                class="btn btn-sm btn-dark">Return</button>
                                        <button type="button" onclick="returnPpe({type: 2,articleId: @item.ArticleId ,employeeId: @Model.Id})" 
                                                class="btn btn-sm btn-info">Change</button>
                                        <button type="button" onclick="returnPpe({type: 3,articleId: @item.ArticleId,employeeId: @Model.Id})" 
                                                class="btn btn-sm btn-danger">Reassign</button>
                                    </div>
                                </form>*@
                                
                                @* </form> *@
                                <div class="btn-group btn-group-sm">
                                    <form asp-action="Create" method="get" asp-controller="Returns">
                                        <input type="hidden" name="articleId" value="@item.ArticleId" />
                                        <input type="hidden" name="employeeId" value="@Model.Id"/>
                                        <button type="submit" class="btn btn-sm btn-info">Return</button>
                                    </form>
                                    <form asp-action="Create" method="get" asp-controller="Returns" class="mx-1">
                                        <input type="hidden" name="articleId" value="@item.ArticleId" />
                                        <input type="hidden" name="employeeId" value="@Model.Id"/>
                                        <button type="submit" class="btn btn-sm btn-primary">Change</button>
                                    </form>
                                    <form asp-action="Create" method="get" asp-controller="Returns">
                                        <input type="hidden" name="articleId" value="@item.ArticleId" />
                                        <input type="hidden" name="employeeId" value="@Model.Id"/>
                                        <button type="submit" class="btn btn-sm btn-danger">Reassign</button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="tab-pane" id="tab42" aria-labelledby="base-tab42">
            <div class="d-flex justify-content-between align-items-center">
                <h3 class="card-title">PPEs to be paid</h3>
            </div>
            <div class="bg-white">
                <table class="table">
                    <thead>
                    <tr class="bg-dark text-white">
                        <th>PPE</th>
                        <th>Variant</th>
                        <th>Qte</th>
                        <th>Action</th>
                    </tr>
                    </thead>
                    <tbody>
                    @*@foreach (var item in Model.PayableStocks.Where(e => e.Quantity > 0 && e.IsPaid == false))
                    {
                        <tr>
                            <td>@item.Article.Ppe.Title</td> 
                            <td>@item.Article.AttributeValueAttributeCategory.AttributeValue.Value.Text</td>
                            <td>@item.Quantity</td>
                            <td><a class="btn btn-sm btn-danger">Rembours√©</a></td>
                        </tr>
                    }*@
                    </tbody>
                </table>
            </div>
        </div>
        <div class="tab-pane" id="tab43" aria-labelledby="base-tab43">
            <div class="d-flex justify-content-between align-items-center">
                <h3 class="card-title">History PPEs</h3>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <table class="table table-bordered">
                        <thead>
                        <tr>
                            <th>Date</th>
                            <th>Ppe</th>
                            <th>Designation</th>
                            <th>Qte</th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var item in Model.Dotations!.OrderByDescending(r => r.Date))
                        {
                            <tr>
                                <td rowspan="@(item.DotationDetails.Count() + 1)">@item.Date.ToString("d")</td>
                            </tr>
                            foreach (var itemDotation in item.DotationDetails)
                            {
                                <tr>
                                    <td>@itemDotation.Article!.Ppe.Title - @itemDotation.Article!.AttributeValueAttributeCategory!.AttributeValue!.Value!.Text</td>
                                    <td>@item.Type</td>
                                    <td>@itemDotation.Quantity</td>
                                </tr>
                            }
                        }
                        </tbody>
                    </table>
                </div>
                <div class="col-md-6">
                    <table class="table table-bordered">
                        <thead>   
                        <tr>
                            <th class="col">Date</th>
                            <th class="col">Ppe</th>
                            <th class="col">Status ppe</th>
                            <th class="col">Quantity</th>
                        </tr>
                        </thead>
                        @*@if (Model.Returns != null)
                        {
                            foreach (var item in Model.Returns.OrderByDescending(r => r.Date))
                            {
                                <tr>
                                    <td>@item.Date.ToString("d")</td>
                                    <td>@item.Article!.Ppe.Title - @item.Article!.AttributeValueAttributeCategory!.AttributeValue!.Value!.Text</td>
                                     <td>@item.Status.ToString()</td>
                                    <td>@item.Quantity</td>
                                </tr>
                            }
                        }*@
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
    $(document).ready(function () {
        $('.hseCheckSelect').on('change', function () {
            if ($(this).val() === 2) {
                $('.hse-from-group').hide();
            } else {
                $('.hse-from-group').show();
            }
        });
    });
   
    </script>
} 
